id: t2_master_coverage
title: "AXI4 Master: Functional Coverage (Burst/Len/Size + Crosses)"
description: |
  Implement a `uvm_subscriber` coverage component for the AXI4 master that samples
  transactions and reports coverage during `report_phase`.

  Requirements:
  - Class name: `axi4_master_coverage` extending `uvm_subscriber#(axi4_master_tx)`
  - Covergroup name: `axi4_master_covergroup` with `with function sample(axi4_master_agent_config cfg, axi4_master_tx packet)`
  - Implement coverpoints (names must match):
    - AWLEN_CP (bins for 1,2,4,8,16,32,64,128,256; default bin)
    - AWBURST_CP (bins: FIXED, INCR, WRAP; illegal for 3)
    - AWSIZE_CP (bins for 1/2/4/8/16/32/64/128 bytes)
    - ARLEN_CP (same style as AWLEN_CP)
    - ARBURST_CP (bins: FIXED, INCR, WRAP; illegal for 3)
    - ARSIZE_CP (bins for 1/2/4/8/16/32/64/128 bytes)
  - Implement crosses:
    - AWLENGTH_CP_X_AWSIZE_X_AWBURST
    - ARLENGTH_CP_X_ARSIZE_X_ARBURST
  - Call `axi4_master_covergroup.sample(cfg, t)` in `write()`
  - Print instance coverage percentage in `report_phase()` with text:
    `AXI4 Master Agent Coverage = <number> %`

files_to_create:
  - path: src/hvl_top/master/axi4_master_coverage.sv
    from_stub: gym/stubs/axi4_master_coverage.sv

eval:
  type: coverage_master
  simulator: questa
  testname: coverage_eval_test
  pass_criteria:
    - Simulation completes without UVM_FATAL/UVM_ERROR
    - Log contains `AXI4 Master Agent Coverage = <N> %` with N >= 60.0

